{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","onClick","removeFriend","id","Wrapper","children","Title","App","state","friends","_this","filter","friend","setState","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","clicked","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mtFA6BeA,MA1Bf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMM,MAEhCL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMS,YAEtCR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BH,EAAMU,YAIxCT,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAMX,EAAMY,aAAaZ,EAAMa,KAAKT,UAAU,UAA7D,uCCfSU,MAJf,SAAiBd,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMe,iBCG1BC,MAJf,SAAehB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMe,kBC0CvBE,6MAtCbC,MAAQ,CACNC,aAGFP,aAAe,SAAAC,GAIb,IAAMM,EAAUC,EAAKF,MAAMC,QAAQE,OAAO,SAAAC,GAAM,OAAIA,EAAOT,KAAOA,IAGlEO,EAAKG,SAAS,CAAEJ,qFAIT,IAAAK,EAAAC,KACP,OACExB,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAACwB,EAAD,qBAEA1B,EAAAC,EAAAC,cAAA,mCACCsB,KAAKP,MAAMC,QAAQS,IAAI,SAAAN,GAAM,OAC5BrB,EAAAC,EAAAC,cAAC0B,EAAD,CACEjB,aAAcY,EAAKZ,aACnBC,GAAIS,EAAOT,GACXiB,IAAKR,EAAOT,GACZP,KAAMgB,EAAOhB,KACbE,MAAOc,EAAOd,MACdC,WAAYa,EAAOb,WACnBsB,QAAST,EAAOS,QAChBrB,SAAUY,EAAOZ,qBAhCXsB,mBCDlBC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.04a9b8e6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n       click me no more than once!\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //instead of remove friend, add function that changes the state of the card to true when clicked and adds +1 to the counter, keep a log of highest score by updating \"highest score\" when the new score is higher than the recorded highest score each game if state was already true (previously clicked before) player restarts game\n    //\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    //add function to shuffle cards upon reloading \n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {/* keep track of scores where the zeros are, will add jsx to point to it when i have variables made to hold that info, it breaks the app if i make place holders without defining them first */}\n        <h1>score: 0  topscore: 0</h1>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            clicked={friend.clicked}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}